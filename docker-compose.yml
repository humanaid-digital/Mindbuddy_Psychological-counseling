version: '3.8'

services:
  # 백엔드 서비스 (Node.js)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: mindbuddy-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://mongodb:27017/mindbuddy
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key}
      - FRONTEND_URL=http://localhost:3000
      - JITSI_DOMAIN=meet.jit.si
      - JITSI_APP_ID=mindbuddy
    depends_on:
      - mongodb
      - redis
    networks:
      - mindbuddy-network
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 프론트엔드 서비스 (정적 파일)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: mindbuddy-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - mindbuddy-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 데이터베이스 서비스 (MongoDB)
  mongodb:
    image: mongo:7.0
    container_name: mindbuddy-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password}
      - MONGO_INITDB_DATABASE=mindbuddy
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - mindbuddy-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: mindbuddy-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mindbuddy-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: mindbuddy-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - mindbuddy-network
    restart: unless-stopped

volumes:
  mongodb_data:
  redis_data:

networks:
  mindbuddy-network:
    driver: bridge
