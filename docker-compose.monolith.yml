version: '3.8'

services:
  # 메인 애플리케이션 (모놀리식)
  app:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: mindbuddy-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/mindbuddy
      - JWT_SECRET=${JWT_SECRET:-mindBuddySecretKey2025SecureApplicationForCounseling}
      - REDIS_URL=redis://redis:6379
      - FRONTEND_URL=http://localhost:3000
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - mindbuddy-network
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs

  # React 프론트엔드
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mindbuddy-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=/api
      - REACT_APP_SERVER_URL=""
    depends_on:
      - app
    networks:
      - mindbuddy-network

  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:15-alpine
    container_name: mindbuddy-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=mindbuddy
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql:ro
    networks:
      - mindbuddy-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d mindbuddy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis 캐시
  redis:
    image: redis:7-alpine
    container_name: mindbuddy-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mindbuddy-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx 리버스 프록시 (선택사항)
  nginx:
    image: nginx:alpine
    container_name: mindbuddy-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
      - frontend
    networks:
      - mindbuddy-network

volumes:
  postgres_data:
  redis_data:

networks:
  mindbuddy-network:
    driver: bridge